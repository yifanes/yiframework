<?phpclass Controller extends Base{    /*     * 跳转     * usage: $this->_redirect(array('controller'=>'',action='','param1'=>'1'));     */    protected function _redirect(Array $arr){        array_key_exists('controller', $arr) || $arr['controller'] = Path::getController();        array_key_exists('action', $arr) || $arr['action'] = Path::getAction();        $str = 'http://' . Path::getBasePath() . 'index.php?';        foreach ($arr as $key=>$val){            if(!is_int($key)){                $str .= $key .'='. $val .'&';            }        }        $str = substr($str, 0, -1);        Response::redirect($str);    }    protected function _forward(Array $arr){        $controller = Path::getController();        $action = Path::getAction();        array_key_exists('Controller', $arr) && $controller = $arr['Controller'];        array_key_exists('action', $arr) && $action = $arr['Action'];        $controller .= 'Controller';        //如果传递的controller是这个类        if($controller === get_class()){            //如果在该类中存在方法            if(method_exists($this, $action)){                $this->$action();            }else{                throw new Exception('参数非法');            }        }else{            if(class_exists($controller)){                $class = new $controller;                if(method_exists($class, $action)){                    $class->$action();                }else{                    throw new Exception('参数非法');                }            }else{                throw new Exception('参数非法');            }        }    }    protected function _assign(Array $arr){        View::assign($arr);    }    protected function _display($str){        if(is_string($str)){            $str = str_replace(                array('.', '#'),                array('/', '.'),                $str            );            View::display(USERAPP_PATH . 'Modules/' . View::VIEW_BASE_PATH . $str . '.php');        }    }}